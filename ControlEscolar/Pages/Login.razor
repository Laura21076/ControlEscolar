@page "/"

@layout LoginLayout
@using System.Net.Http.Json
@using System.Threading.Tasks
@using ControlEscolar.Layout
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@inject NavigationManager Navigation
@using ControlEscolar.Models
@inject AuthService AuthService
@inject Blazored.LocalStorage.ILocalStorageService _localStorage
@inject AuthenticationStateProvider AuthStateProvider


<head>
    <link rel="stylesheet" href="css/Login.css?v=2">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
</head>

<div class="login-container">
    <div class="login-box">
        <i class="bi bi-person-circle user-icon"></i>
        <h3>Iniciar Sesión</h3>

        @if (!string.IsNullOrEmpty(Mensaje))
        {
            <p class="error-message">@Mensaje</p>
        }

        <EditForm Model="@loginRequest" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="input-group">
                <label>Email:</label>
                <InputText class="form-control" @bind-Value="loginRequest.Email" />
                <ValidationMessage For="@(() => loginRequest.Email)" class="validation-message" />
            </div>

            <div class="input-group">
                <label>Contraseña:</label>
                <InputText class="form-control" type="password" @bind-Value="loginRequest.Password" />
                <ValidationMessage For="@(() => loginRequest.Password)" class="validation-message" />
            </div>

            <button type="submit" class="btn-login">Iniciar Sesión</button>
        </EditForm>

        <div class="register-container">
            <p>¿No tienes cuenta?</p>
            <button class="btn-register" @onclick="IrARegistro">Registrarse</button>
        </div>
    </div>
</div>

@code {
    private LoginRequest loginRequest = new();
    private string Mensaje = string.Empty;

    private async Task HandleLogin()
    {
        var token = await AuthService.Login(loginRequest);
        if (!string.IsNullOrEmpty(token))
        {
            // Aquí puedes guardar el token en localStorage/sessionStorage si lo necesitas
            Navigation.NavigateTo("/Inicio");
        }
        else
        {
            Mensaje = "Credenciales incorrectas.";
        }
    }

    private void IrARegistro()
    {
        Navigation.NavigateTo("/registro");
    }
}
